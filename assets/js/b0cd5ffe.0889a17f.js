"use strict";(self.webpackChunkvulrule=self.webpackChunkvulrule||[]).push([[8242],{28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>l});var i=t(96540);const s={},r=i.createContext(s);function c(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),i.createElement(r.Provider,{value:n},e.children)}},97220:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>c,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"projects/linux kernel/api_cifs_get_tcp_session","title":"api_cifs_get_tcp_session","description":"API Overview","source":"@site/docs/projects/linux kernel/api_cifs_get_tcp_session.md","sourceDirName":"projects/linux kernel","slug":"/projects/linux kernel/api_cifs_get_tcp_session","permalink":"/vulrule/projects/linux kernel/api_cifs_get_tcp_session","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"api_cifs_convert_path_to_utf16","permalink":"/vulrule/projects/linux kernel/api_cifs_convert_path_to_utf16"},"next":{"title":"api_cifs_lock_init","permalink":"/vulrule/projects/linux kernel/api_cifs_lock_init"}}');var s=t(74848),r=t(28453);const c={},l=void 0,o={},a=[{value:"API Overview",id:"api-overview",level:2},{value:"Rule Description",id:"rule-description",level:2},{value:"Rule Code",id:"rule-code",level:2}];function p(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"api-overview",children:"API Overview"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"cifs_get_tcp_session"})," is an API in ",(0,s.jsx)(n.strong,{children:"Linux kernel"}),". This rule belongs to the ",(0,s.jsx)(n.strong,{children:"api pair"})," type. This rule is generated using ",(0,s.jsx)(n.a,{href:"../../tools/APISpecGen",children:"APISpecGen"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"rule-description",children:"Rule Description"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"The resource acquired by cifs_get_tcp_session must be properly released using cifs_put_tcp_session"})}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Tags: ",(0,s.jsx)(n.strong,{children:"api pair"})]}),"\n",(0,s.jsx)(n.li,{children:"Parameter Index: ****"}),"\n",(0,s.jsxs)(n.li,{children:["CWE Type: ",(0,s.jsx)(n.strong,{children:"CWE-404"})]}),"\n"]})}),"\n",(0,s.jsx)(n.h2,{id:"rule-code",children:"Rule Code"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import cpp\nimport semmle.code.cpp.dataflow.new.DataFlow\n\n\nDataFlow::Node getSource(FunctionCall fc){\n  fc.getTarget().hasName("cifs_get_tcp_session")\n  and result.asExpr() = fc.getArgument(0)\n}\n\nDataFlow::Node getSink(FunctionCall fc){\n  fc.getTarget().hasName("cifs_put_tcp_session")\n  and result.asExpr() = fc.getArgument(0)\n}\n\nFunctionCall freeTarget(FunctionCall malloc){\n  DataFlow::localFlow(getSource(malloc), getSink(result))\n}\n\nfrom FunctionCall fc\nwhere fc.getTarget().hasName("cifs_get_tcp_session")\n      and not exists(\n        FunctionCall free| \n        free = freeTarget(fc)\n      )\nselect fc.getLocation()\n\n    \n'})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}}}]);