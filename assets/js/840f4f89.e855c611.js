"use strict";(self.webpackChunkvulrule=self.webpackChunkvulrule||[]).push([[15494],{7633:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>s});const o=JSON.parse('{"id":"projects/ffmpeg/api_avcodec_alloc_context3","title":"api_avcodec_alloc_context3","description":"API Overview","source":"@site/docs/projects/ffmpeg/api_avcodec_alloc_context3.md","sourceDirName":"projects/ffmpeg","slug":"/projects/ffmpeg/api_avcodec_alloc_context3","permalink":"/vulrule/projects/ffmpeg/api_avcodec_alloc_context3","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"api_av_tx_init","permalink":"/vulrule/projects/ffmpeg/api_av_tx_init"},"next":{"title":"api_avcodec_close","permalink":"/vulrule/projects/ffmpeg/api_avcodec_close"}}');var c=t(74848),l=t(28453);const r={},a=void 0,i={},s=[{value:"API Overview",id:"api-overview",level:2},{value:"Rule Description",id:"rule-description",level:2},{value:"Rule Code",id:"rule-code",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h2,{id:"api-overview",children:"API Overview"}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.strong,{children:"avcodec_alloc_context3"})," is an API in ",(0,c.jsx)(n.strong,{children:"ffmpeg"}),". This rule belongs to the ",(0,c.jsx)(n.strong,{children:"api pair"})," type. This rule is generated using ",(0,c.jsx)(n.a,{href:"../../tools/ChatDetector",children:"ChatDetector"}),"."]}),"\n",(0,c.jsx)(n.h2,{id:"rule-description",children:"Rule Description"}),"\n",(0,c.jsx)(n.admonition,{type:"tip",children:(0,c.jsx)(n.p,{children:"The return value of avcodec_alloc_context3 must be released by calling avcodec_close, with the same object passed as the 1-th argument to avcodec_close"})}),"\n",(0,c.jsx)(n.admonition,{type:"info",children:(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:["Tags: ",(0,c.jsx)(n.strong,{children:"api pair"})]}),"\n",(0,c.jsxs)(n.li,{children:["Parameter Index: ",(0,c.jsx)(n.strong,{children:"-1"})]}),"\n",(0,c.jsxs)(n.li,{children:["CWE Type: ",(0,c.jsx)(n.strong,{children:"CWE-404"})]}),"\n"]})}),"\n",(0,c.jsx)(n.h2,{id:"rule-code",children:"Rule Code"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-python",children:'import cpp\nimport semmle.code.cpp.dataflow.new.DataFlow\n\n\nDataFlow::Node getSource(FunctionCall fc){\n  fc.getTarget().hasName("avcodec_alloc_context3")\n  and result.asExpr() = fc\n}\n\nDataFlow::Node getSink(FunctionCall fc){\n  fc.getTarget().hasName("avcodec_close")\n  and result.asExpr() = fc.getArgument(0)\n}\n\nFunctionCall freeTarget(FunctionCall malloc){\n  DataFlow::localFlow(getSource(malloc), getSink(result))\n}\n\nfrom FunctionCall fc\nwhere fc.getTarget().hasName("avcodec_alloc_context3")\n      and not exists(\n        FunctionCall free| \n        free = freeTarget(fc)\n      )\nselect fc.getLocation()\n\n'})})]})}function p(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var o=t(96540);const c={},l=o.createContext(c);function r(e){const n=o.useContext(l);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:r(e.components),o.createElement(l.Provider,{value:n},e.children)}}}]);