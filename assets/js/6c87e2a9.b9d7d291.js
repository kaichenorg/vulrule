"use strict";(self.webpackChunkvulrule=self.webpackChunkvulrule||[]).push([[92374],{28453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>o});var r=n(96540);const t={},l=r.createContext(t);function i(e){const s=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(l.Provider,{value:s},e.children)}},89580:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>p});const r=JSON.parse('{"id":"projects/openssl/api_ssl_set_srp_server_param","title":"api_ssl_set_srp_server_param","description":"API Overview","source":"@site/docs/projects/openssl/api_ssl_set_srp_server_param.md","sourceDirName":"projects/openssl","slug":"/projects/openssl/api_ssl_set_srp_server_param","permalink":"/vulrule/projects/openssl/api_ssl_set_srp_server_param","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"api_ssl_set_min_proto_version","permalink":"/vulrule/projects/openssl/api_ssl_set_min_proto_version"},"next":{"title":"api_ssl_set_tlsext_status_type","permalink":"/vulrule/projects/openssl/api_ssl_set_tlsext_status_type"}}');var t=n(74848),l=n(28453);const i={},o=void 0,a={},p=[{value:"API Overview",id:"api-overview",level:2},{value:"Rule Description",id:"rule-description",level:2},{value:"Rule Code",id:"rule-code",level:2}];function c(e){const s={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h2,{id:"api-overview",children:"API Overview"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"SSL_set_srp_server_param"})," is an API in ",(0,t.jsx)(s.strong,{children:"openssl"}),". This rule belongs to the ",(0,t.jsx)(s.strong,{children:"return value check"})," type. This rule is generated using ",(0,t.jsx)(s.a,{href:"../../tools/AURC",children:"AURC"}),"."]}),"\n",(0,t.jsx)(s.h2,{id:"rule-description",children:"Rule Description"}),"\n",(0,t.jsx)(s.admonition,{type:"tip",children:(0,t.jsx)(s.p,{children:"SSL_set_srp_server_param() returns 1 on success and -1 on failure."})}),"\n",(0,t.jsx)(s.admonition,{type:"info",children:(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["Tags: ",(0,t.jsx)(s.strong,{children:"return value check"})]}),"\n",(0,t.jsxs)(s.li,{children:["Parameter Index: ",(0,t.jsx)(s.strong,{children:"N/A"})]}),"\n",(0,t.jsxs)(s.li,{children:["CWE Type: ",(0,t.jsx)(s.strong,{children:"CWE-253"})]}),"\n"]})}),"\n",(0,t.jsx)(s.h2,{id:"rule-code",children:"Rule Code"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-python",children:'import cpp\n\nclass OpenSSLFunctionCall extends FunctionCall {\n  OpenSSLFunctionCall() {\n    this.getTarget().hasName("SSL_set_srp_server_param")\n  }\n}\n\nfrom OpenSSLFunctionCall call, UnaryOperation uop\nwhere\n  uop.getOperator() = "!" and\n  uop.getOperand() = call.getAnAccess()\nselect uop, "This negation checks the return value of SSL_set_srp_server_param."\n'})})]})}function u(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);