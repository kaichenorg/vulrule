"use strict";(self.webpackChunkvulrule=self.webpackChunkvulrule||[]).push([[25332],{28453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>c});var r=s(96540);const t={},o=r.createContext(t);function i(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(o.Provider,{value:n},e.children)}},89954:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>p});const r=JSON.parse('{"id":"projects/openssl/api_ocsp_resp_count","title":"api_ocsp_resp_count","description":"API Overview","source":"@site/docs/projects/openssl/api_ocsp_resp_count.md","sourceDirName":"projects/openssl","slug":"/projects/openssl/api_ocsp_resp_count","permalink":"/vulrule/projects/openssl/api_ocsp_resp_count","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"api_ocsp_check_nonce","permalink":"/vulrule/projects/openssl/api_ocsp_check_nonce"},"next":{"title":"api_ocsp_resp_find","permalink":"/vulrule/projects/openssl/api_ocsp_resp_find"}}');var t=s(74848),o=s(28453);const i={},c=void 0,l={},p=[{value:"API Overview",id:"api-overview",level:2},{value:"Rule Description",id:"rule-description",level:2},{value:"Rule Code",id:"rule-code",level:2}];function a(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"api-overview",children:"API Overview"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"OCSP_resp_count"})," is an API in ",(0,t.jsx)(n.strong,{children:"openssl"}),". This rule belongs to the ",(0,t.jsx)(n.strong,{children:"return value check"})," type. This rule is generated using ",(0,t.jsx)(n.a,{href:"../../tools/AURC",children:"AURC"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"rule-description",children:"Rule Description"}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"OCSP_resp_count() returns the total number of B<OCSP_SINGLERESP> fields in I<bs> or -1 on error."})}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Tags: ",(0,t.jsx)(n.strong,{children:"return value check"})]}),"\n",(0,t.jsx)(n.li,{children:"Parameter Index: ****"}),"\n",(0,t.jsxs)(n.li,{children:["CWE Type: ",(0,t.jsx)(n.strong,{children:"CWE-253"})]}),"\n"]})}),"\n",(0,t.jsx)(n.h2,{id:"rule-code",children:"Rule Code"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import cpp\n\nclass OpenSSLFunctionCall extends FunctionCall {\n  OpenSSLFunctionCall() {\n    this.getTarget().hasName("OCSP_resp_count")\n  }\n}\n\nfrom OpenSSLFunctionCall call, UnaryOperation uop\nwhere\n  uop.getOperator() = "!" and\n  uop.getOperand() = call.getAnAccess()\nselect uop, "This negation checks the return value of OCSP_resp_count."\n'})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}}}]);