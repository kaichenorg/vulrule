"use strict";(self.webpackChunkvulrule=self.webpackChunkvulrule||[]).push([[36444],{28453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>a});var t=r(96540);const l={},c=t.createContext(l);function s(e){const n=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),t.createElement(c.Provider,{value:n},e.children)}},49249:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"projects/linux kernel/api_nfsd4_cltrack_grace_start","title":"api_nfsd4_cltrack_grace_start","description":"API Overview","source":"@site/docs/projects/linux kernel/api_nfsd4_cltrack_grace_start.md","sourceDirName":"projects/linux kernel","slug":"/projects/linux kernel/api_nfsd4_cltrack_grace_start","permalink":"/vulrule/projects/linux kernel/api_nfsd4_cltrack_grace_start","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"api_nfsd4_cltrack_client_has_session","permalink":"/vulrule/projects/linux kernel/api_nfsd4_cltrack_client_has_session"},"next":{"title":"api_nfsd4_cltrack_legacy_recdir","permalink":"/vulrule/projects/linux kernel/api_nfsd4_cltrack_legacy_recdir"}}');var l=r(74848),c=r(28453);const s={},a=void 0,i={},o=[{value:"API Overview",id:"api-overview",level:2},{value:"Rule Description",id:"rule-description",level:2},{value:"Rule Code",id:"rule-code",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h2,{id:"api-overview",children:"API Overview"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"nfsd4_cltrack_grace_start"})," is an API in ",(0,l.jsx)(n.strong,{children:"Linux kernel"}),". This rule belongs to the ",(0,l.jsx)(n.strong,{children:"api pair"})," type. This rule is generated using ",(0,l.jsx)(n.a,{href:"../../tools/APISpecGen",children:"APISpecGen"}),"."]}),"\n",(0,l.jsx)(n.h2,{id:"rule-description",children:"Rule Description"}),"\n",(0,l.jsx)(n.admonition,{type:"tip",children:(0,l.jsx)(n.p,{children:"The resource acquired by nfsd4_cltrack_grace_start must be properly released using kfree"})}),"\n",(0,l.jsx)(n.admonition,{type:"info",children:(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Tags: ",(0,l.jsx)(n.strong,{children:"api pair"})]}),"\n",(0,l.jsx)(n.li,{children:"Parameter Index: ****"}),"\n",(0,l.jsxs)(n.li,{children:["CWE Type: ",(0,l.jsx)(n.strong,{children:"CWE-404"})]}),"\n"]})}),"\n",(0,l.jsx)(n.h2,{id:"rule-code",children:"Rule Code"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'\n    import cpp\nimport semmle.code.cpp.dataflow.new.DataFlow\n\n\nDataFlow::Node getSource(FunctionCall fc){\n  fc.getTarget().hasName("nfsd4_cltrack_grace_start")\n  and result.asExpr() = fc\n}\n\nDataFlow::Node getSink(FunctionCall fc){\n  fc.getTarget().hasName("kfree")\n  and result.asExpr() = fc.getArgument(0)\n}\n\nFunctionCall freeTarget(FunctionCall malloc){\n  DataFlow::localFlow(getSource(malloc), getSink(result))\n}\n\nfrom FunctionCall fc\nwhere fc.getTarget().hasName("nfsd4_cltrack_grace_start")\n      and not exists(\n        FunctionCall free| \n        free = freeTarget(fc)\n      )\nselect fc.getLocation()\n\n    \n'})})]})}function u(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}}}]);