"use strict";(self.webpackChunkvulrule=self.webpackChunkvulrule||[]).push([[97799],{28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>a});var i=r(96540);const s={},t=i.createContext(s);function o(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(t.Provider,{value:n},e.children)}},83637:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"projects/openssl/api_i2d_keyparams","title":"api_i2d_keyparams","description":"API Overview","source":"@site/docs/projects/openssl/api_i2d_keyparams.md","sourceDirName":"projects/openssl","slug":"/projects/openssl/api_i2d_keyparams","permalink":"/vulrule/projects/openssl/api_i2d_keyparams","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"api_i2b_pvk_bio_ex","permalink":"/vulrule/projects/openssl/api_i2b_pvk_bio_ex"},"next":{"title":"api_i2d_keyparams_bio","permalink":"/vulrule/projects/openssl/api_i2d_keyparams_bio"}}');var s=r(74848),t=r(28453);const o={},a=void 0,l={},c=[{value:"API Overview",id:"api-overview",level:2},{value:"Rule Description",id:"rule-description",level:2},{value:"Rule Code",id:"rule-code",level:2}];function p(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"api-overview",children:"API Overview"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"i2d_KeyParams"})," is an API in ",(0,s.jsx)(n.strong,{children:"openssl"}),". This rule belongs to the ",(0,s.jsx)(n.strong,{children:"return value check"})," type. This rule is generated using ",(0,s.jsx)(n.a,{href:"../../tools/AURC",children:"AURC"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"rule-description",children:"Rule Description"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"i2d_PrivateKey(), i2d_PrivateKey_bio(), i2d_PrivateKey_fp(), i2d_PublicKey(), i2d_KeyParams() i2d_KeyParams_bio() return the number of bytes successfully encoded or a negative value if an error occurs. The error code can be obtained by calling L<ERR_get_error(3)>."})}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Tags: ",(0,s.jsx)(n.strong,{children:"return value check"})]}),"\n",(0,s.jsx)(n.li,{children:"Parameter Index: ****"}),"\n",(0,s.jsxs)(n.li,{children:["CWE Type: ",(0,s.jsx)(n.strong,{children:"CWE-253"})]}),"\n"]})}),"\n",(0,s.jsx)(n.h2,{id:"rule-code",children:"Rule Code"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import cpp\n\nclass OpenSSLFunctionCall extends FunctionCall {\n  OpenSSLFunctionCall() {\n    this.getTarget().hasName("i2d_KeyParams")\n  }\n}\n\nfrom OpenSSLFunctionCall call, UnaryOperation uop\nwhere\n  uop.getOperator() = "!" and\n  uop.getOperand() = call.getAnAccess()\nselect uop, "This negation checks the return value of i2d_KeyParams."\n'})})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}}}]);