"use strict";(self.webpackChunkvulrule=self.webpackChunkvulrule||[]).push([[59302],{20560:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"projects/openssl/api_ssl_ctx_get_tlsext_status_type","title":"api_ssl_ctx_get_tlsext_status_type","description":"API Overview","source":"@site/docs/projects/openssl/api_ssl_ctx_get_tlsext_status_type.md","sourceDirName":"projects/openssl","slug":"/projects/openssl/api_ssl_ctx_get_tlsext_status_type","permalink":"/vulrule/projects/openssl/api_ssl_ctx_get_tlsext_status_type","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"api_ssl_ctx_get_keylog_callback","permalink":"/vulrule/projects/openssl/api_ssl_ctx_get_keylog_callback"},"next":{"title":"api_ssl_ctx_load_verify_locations","permalink":"/vulrule/projects/openssl/api_ssl_ctx_load_verify_locations"}}');var l=s(74848),r=s(28453);const o={},i=void 0,c={},a=[{value:"API Overview",id:"api-overview",level:2},{value:"Rule Description",id:"rule-description",level:2},{value:"Rule Code",id:"rule-code",level:2}];function p(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(t.h2,{id:"api-overview",children:"API Overview"}),"\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)(t.strong,{children:"SSL_CTX_get_tlsext_status_type"})," is an API in ",(0,l.jsx)(t.strong,{children:"openssl"}),". This rule belongs to the ",(0,l.jsx)(t.strong,{children:"return value check"})," type. This rule is generated using ",(0,l.jsx)(t.a,{href:"../../tools/AURC",children:"AURC"}),"."]}),"\n",(0,l.jsx)(t.h2,{id:"rule-description",children:"Rule Description"}),"\n",(0,l.jsx)(t.admonition,{type:"tip",children:(0,l.jsx)(t.p,{children:"SSL_CTX_get_tlsext_status_type() returns the value previously set by SSL_CTX_set_tlsext_status_type(), or -1 if not set."})}),"\n",(0,l.jsx)(t.admonition,{type:"info",children:(0,l.jsxs)(t.ul,{children:["\n",(0,l.jsxs)(t.li,{children:["Tags: ",(0,l.jsx)(t.strong,{children:"return value check"})]}),"\n",(0,l.jsx)(t.li,{children:"Parameter Index: ****"}),"\n",(0,l.jsxs)(t.li,{children:["CWE Type: ",(0,l.jsx)(t.strong,{children:"CWE-253"})]}),"\n"]})}),"\n",(0,l.jsx)(t.h2,{id:"rule-code",children:"Rule Code"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-python",children:'import cpp\n\nclass OpenSSLFunctionCall extends FunctionCall {\n  OpenSSLFunctionCall() {\n    this.getTarget().hasName("SSL_CTX_get_tlsext_status_type")\n  }\n}\n\nfrom OpenSSLFunctionCall call, UnaryOperation uop\nwhere\n  uop.getOperator() = "!" and\n  uop.getOperand() = call.getAnAccess()\nselect uop, "This negation checks the return value of SSL_CTX_get_tlsext_status_type."\n'})})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(p,{...e})}):p(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>i});var n=s(96540);const l={},r=n.createContext(l);function o(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);