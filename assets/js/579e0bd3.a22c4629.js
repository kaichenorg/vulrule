"use strict";(self.webpackChunkvulrule=self.webpackChunkvulrule||[]).push([[53580],{28453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>o});var t=r(96540);const a={},l=t.createContext(a);function i(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),t.createElement(l.Provider,{value:n},e.children)}},62251:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>f,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"projects/ffmpeg/api_av_buffer_create","title":"api_av_buffer_create","description":"API Overview","source":"@site/docs/projects/ffmpeg/api_av_buffer_create.md","sourceDirName":"projects/ffmpeg","slug":"/projects/ffmpeg/api_av_buffer_create","permalink":"/vulrule/projects/ffmpeg/api_av_buffer_create","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"api_av_buffer_alloc","permalink":"/vulrule/projects/ffmpeg/api_av_buffer_alloc"},"next":{"title":"api_av_buffer_default_free","permalink":"/vulrule/projects/ffmpeg/api_av_buffer_default_free"}}');var a=r(74848),l=r(28453);const i={},o=void 0,s={},c=[{value:"API Overview",id:"api-overview",level:2},{value:"Rule Description",id:"rule-description",level:2},{value:"Rule Code",id:"rule-code",level:2}];function u(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"api-overview",children:"API Overview"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"av_buffer_create"})," is an API in ",(0,a.jsx)(n.strong,{children:"ffmpeg"}),". This rule belongs to the ",(0,a.jsx)(n.strong,{children:"api pair"})," type. This rule is generated using ",(0,a.jsx)(n.a,{href:"../../tools/ChatDetector",children:"ChatDetector"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"rule-description",children:"Rule Description"}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsx)(n.p,{children:"The return value of av_buffer_create must be released by calling av_buffer_unref, with the same object passed as the 1-th argument to av_buffer_unref"})}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Tags: ",(0,a.jsx)(n.strong,{children:"api pair"})]}),"\n",(0,a.jsxs)(n.li,{children:["Parameter Index: ",(0,a.jsx)(n.strong,{children:"-1"})]}),"\n",(0,a.jsxs)(n.li,{children:["CWE Type: ",(0,a.jsx)(n.strong,{children:"CWE-404"})]}),"\n"]})}),"\n",(0,a.jsx)(n.h2,{id:"rule-code",children:"Rule Code"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'import cpp\nimport semmle.code.cpp.dataflow.new.DataFlow\n\n\nDataFlow::Node getSource(FunctionCall fc){\n  fc.getTarget().hasName("av_buffer_create")\n  and result.asExpr() = fc\n}\n\nDataFlow::Node getSink(FunctionCall fc){\n  fc.getTarget().hasName("av_buffer_unref")\n  and result.asExpr() = fc.getArgument(0)\n}\n\nFunctionCall freeTarget(FunctionCall malloc){\n  DataFlow::localFlow(getSource(malloc), getSink(result))\n}\n\nfrom FunctionCall fc\nwhere fc.getTarget().hasName("av_buffer_create")\n      and not exists(\n        FunctionCall free| \n        free = freeTarget(fc)\n      )\nselect fc.getLocation()\n\n'})})]})}function f(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}}}]);