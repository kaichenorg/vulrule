"use strict";(self.webpackChunkvulrule=self.webpackChunkvulrule||[]).push([[28454],{10307:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>p,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"projects/openssl/api_evp_pkey_digestsign_supports_digest","title":"api_evp_pkey_digestsign_supports_digest","description":"API Overview","source":"@site/docs/projects/openssl/api_evp_pkey_digestsign_supports_digest.md","sourceDirName":"projects/openssl","slug":"/projects/openssl/api_evp_pkey_digestsign_supports_digest","permalink":"/vulrule/projects/openssl/api_evp_pkey_digestsign_supports_digest","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"api_evp_pkey_derive_init","permalink":"/vulrule/projects/openssl/api_evp_pkey_derive_init"},"next":{"title":"api_evp_pkey_encapsulate","permalink":"/vulrule/projects/openssl/api_evp_pkey_encapsulate"}}');var i=s(74848),r=s(28453);const o={},p=void 0,l={},a=[{value:"API Overview",id:"api-overview",level:2},{value:"Rule Description",id:"rule-description",level:2},{value:"Rule Code",id:"rule-code",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"api-overview",children:"API Overview"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"EVP_PKEY_digestsign_supports_digest"})," is an API in ",(0,i.jsx)(n.strong,{children:"openssl"}),". This rule belongs to the ",(0,i.jsx)(n.strong,{children:"return value check"})," type. This rule is generated using ",(0,i.jsx)(n.a,{href:"../../tools/AURC",children:"AURC"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"rule-description",children:"Rule Description"}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"The EVP_PKEY_digestsign_supports_digest() function returns 1 if the message digest algorithm identified by I<name> can be used for public key signature operations associated with key I<pkey> and 0 if it cannot be used. It returns a negative value for failure."})}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Tags: ",(0,i.jsx)(n.strong,{children:"return value check"})]}),"\n",(0,i.jsx)(n.li,{children:"Parameter Index: ****"}),"\n",(0,i.jsxs)(n.li,{children:["CWE Type: ",(0,i.jsx)(n.strong,{children:"CWE-253"})]}),"\n"]})}),"\n",(0,i.jsx)(n.h2,{id:"rule-code",children:"Rule Code"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import cpp\n\nclass OpenSSLFunctionCall extends FunctionCall {\n  OpenSSLFunctionCall() {\n    this.getTarget().hasName("EVP_PKEY_digestsign_supports_digest")\n  }\n}\n\nfrom OpenSSLFunctionCall call, UnaryOperation uop\nwhere\n  uop.getOperator() = "!" and\n  uop.getOperand() = call.getAnAccess()\nselect uop, "This negation checks the return value of EVP_PKEY_digestsign_supports_digest."\n'})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>p});var t=s(96540);const i={},r=t.createContext(i);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function p(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);