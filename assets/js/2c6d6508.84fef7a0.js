"use strict";(self.webpackChunkvulrule=self.webpackChunkvulrule||[]).push([[52983],{28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>a});var s=t(96540);const i={},r=s.createContext(i);function l(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(r.Provider,{value:n},e.children)}},95461:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>c,frontMatter:()=>l,metadata:()=>s,toc:()=>p});const s=JSON.parse('{"id":"projects/openssl/api_evp_pkey_get_default_digest_name","title":"api_evp_pkey_get_default_digest_name","description":"API Overview","source":"@site/docs/projects/openssl/api_evp_pkey_get_default_digest_name.md","sourceDirName":"projects/openssl","slug":"/projects/openssl/api_evp_pkey_get_default_digest_name","permalink":"/vulrule/projects/openssl/api_evp_pkey_get_default_digest_name","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"api_evp_pkey_get_bn_param","permalink":"/vulrule/projects/openssl/api_evp_pkey_get_bn_param"},"next":{"title":"api_evp_pkey_get_default_digest_nid","permalink":"/vulrule/projects/openssl/api_evp_pkey_get_default_digest_nid"}}');var i=t(74848),r=t(28453);const l={},a=void 0,o={},p=[{value:"API Overview",id:"api-overview",level:2},{value:"Rule Description",id:"rule-description",level:2},{value:"Rule Code",id:"rule-code",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"api-overview",children:"API Overview"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"EVP_PKEY_get_default_digest_name"})," is an API in ",(0,i.jsx)(n.strong,{children:"openssl"}),". This rule belongs to the ",(0,i.jsx)(n.strong,{children:"return value check"})," type. This rule is generated using ",(0,i.jsx)(n.a,{href:"../../tools/AURC",children:"AURC"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"rule-description",children:"Rule Description"}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"EVP_PKEY_get_default_digest_name() and EVP_PKEY_get_default_digest_nid() both return 1 if the message digest is advisory (that is other digests can be used) and 2 if it is mandatory (other digests can not be used). They return 0 or a negative value for failure.  In particular a return value of -2 indicates the operation is not supported by the public key algorithm."})}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Tags: ",(0,i.jsx)(n.strong,{children:"return value check"})]}),"\n",(0,i.jsx)(n.li,{children:"Parameter Index: ****"}),"\n",(0,i.jsxs)(n.li,{children:["CWE Type: ",(0,i.jsx)(n.strong,{children:"CWE-253"})]}),"\n"]})}),"\n",(0,i.jsx)(n.h2,{id:"rule-code",children:"Rule Code"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import cpp\n\nclass OpenSSLFunctionCall extends FunctionCall {\n  OpenSSLFunctionCall() {\n    this.getTarget().hasName("EVP_PKEY_get_default_digest_name")\n  }\n}\n\nfrom OpenSSLFunctionCall call, UnaryOperation uop\nwhere\n  uop.getOperator() = "!" and\n  uop.getOperand() = call.getAnAccess()\nselect uop, "This negation checks the return value of EVP_PKEY_get_default_digest_name."\n'})})]})}function c(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);