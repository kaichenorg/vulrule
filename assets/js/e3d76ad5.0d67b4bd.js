"use strict";(self.webpackChunkvulrule=self.webpackChunkvulrule||[]).push([[24133],{28453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>s});var i=n(96540);const a={},r=i.createContext(a);function c(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),i.createElement(r.Provider,{value:t},e.children)}},97746:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>c,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"projects/ffmpeg/api_avdevice_capabilities_create","title":"api_avdevice_capabilities_create","description":"API Overview","source":"@site/docs/projects/ffmpeg/api_avdevice_capabilities_create.md","sourceDirName":"projects/ffmpeg","slug":"/projects/ffmpeg/api_avdevice_capabilities_create","permalink":"/vulrule/projects/ffmpeg/api_avdevice_capabilities_create","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"api_avcodec_parameters_free","permalink":"/vulrule/projects/ffmpeg/api_avcodec_parameters_free"},"next":{"title":"api_avdevice_free_list_devices","permalink":"/vulrule/projects/ffmpeg/api_avdevice_free_list_devices"}}');var a=n(74848),r=n(28453);const c={},s=void 0,l={},o=[{value:"API Overview",id:"api-overview",level:2},{value:"Rule Description",id:"rule-description",level:2},{value:"Rule Code",id:"rule-code",level:2}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h2,{id:"api-overview",children:"API Overview"}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"avdevice_capabilities_create"})," is an API in ",(0,a.jsx)(t.strong,{children:"ffmpeg"}),". This rule belongs to the ",(0,a.jsx)(t.strong,{children:"api pair"})," type. This rule is generated using ",(0,a.jsx)(t.a,{href:"../../tools/ChatDetector",children:"ChatDetector"}),"."]}),"\n",(0,a.jsx)(t.h2,{id:"rule-description",children:"Rule Description"}),"\n",(0,a.jsx)(t.admonition,{type:"tip",children:(0,a.jsx)(t.p,{children:"Parameter 3 of avdevice_capabilities_create must be released by calling av_dict_free, with the same object passed as the 1-th argument to av_dict_free"})}),"\n",(0,a.jsx)(t.admonition,{type:"info",children:(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["Tags: ",(0,a.jsx)(t.strong,{children:"api pair"})]}),"\n",(0,a.jsxs)(t.li,{children:["Parameter Index: ",(0,a.jsx)(t.strong,{children:"2"})]}),"\n",(0,a.jsxs)(t.li,{children:["CWE Type: ",(0,a.jsx)(t.strong,{children:"CWE-404"})]}),"\n"]})}),"\n",(0,a.jsx)(t.h2,{id:"rule-code",children:"Rule Code"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'import cpp\nimport semmle.code.cpp.dataflow.new.DataFlow\n\n\nDataFlow::Node getSource(FunctionCall fc){\n  fc.getTarget().hasName("avdevice_capabilities_create")\n  and result.asExpr() = fc.getArgument(2)\n}\n\nDataFlow::Node getSink(FunctionCall fc){\n  fc.getTarget().hasName("av_dict_free")\n  and result.asExpr() = fc.getArgument(0)\n}\n\nFunctionCall freeTarget(FunctionCall malloc){\n  DataFlow::localFlow(getSource(malloc), getSink(result))\n}\n\nfrom FunctionCall fc\nwhere fc.getTarget().hasName("avdevice_capabilities_create")\n      and not exists(\n        FunctionCall free| \n        free = freeTarget(fc)\n      )\nselect fc.getLocation()\n'})})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);