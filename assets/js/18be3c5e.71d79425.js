"use strict";(self.webpackChunkvulrule_docusaurus=self.webpackChunkvulrule_docusaurus||[]).push([[88423],{15830:(e,i,r)=>{r.r(i),r.d(i,{assets:()=>o,contentTitle:()=>c,default:()=>u,frontMatter:()=>t,metadata:()=>n,toc:()=>p});const n=JSON.parse('{"id":"libraries/libzip/zip_source_begin_write_cloning","title":"zip_source_begin_write_cloning","description":"libzip","source":"@site/docs/libraries/libzip/zip_source_begin_write_cloning.md","sourceDirName":"libraries/libzip","slug":"/libraries/libzip/zip_source_begin_write_cloning","permalink":"/vulrule/libraries/libzip/zip_source_begin_write_cloning","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"docsSidebar","previous":{"title":"zip_source_begin_write","permalink":"/vulrule/libraries/libzip/zip_source_begin_write"},"next":{"title":"zip_source_buffer","permalink":"/vulrule/libraries/libzip/zip_source_buffer"}}');var l=r(74848),s=r(28453),a=r(29800);const t={sidebar_position:1},c="zip_source_begin_write_cloning",o={},p=[{value:"API \u6982\u8ff0",id:"api-\u6982\u8ff0",level:2},{value:"\u4f7f\u7528\u89c4\u5219",id:"\u4f7f\u7528\u89c4\u5219",level:2},{value:"\u76f8\u5173API",id:"\u76f8\u5173api",level:2}];function _(e){const i={a:"a",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(i.header,{children:(0,l.jsx)(i.h1,{id:"zip_source_begin_write_cloning",children:"zip_source_begin_write_cloning"})}),"\n",(0,l.jsxs)("div",{className:"api-metadata",children:[(0,l.jsx)("span",{className:"api-library",children:"libzip"}),(0,l.jsx)("span",{className:"api-category",children:"Api Pair"})]}),"\n",(0,l.jsx)(i.h2,{id:"api-\u6982\u8ff0",children:"API \u6982\u8ff0"}),"\n",(0,l.jsxs)(i.p,{children:["zip_source_begin_write_cloning \u662f libzip \u5e93\u4e2d\u7684\u4e00\u4e2aAPI\u3002\u8be5API\u5c5e\u4e8e ",(0,l.jsx)(i.strong,{children:"Api Pair"})," \u7c7b\u578b\u7684\u89c4\u5219\u3002"]}),"\n",(0,l.jsx)(i.h2,{id:"\u4f7f\u7528\u89c4\u5219",children:"\u4f7f\u7528\u89c4\u5219"}),"\n",(0,l.jsxs)(i.p,{children:["\u7531 ",(0,l.jsx)(i.a,{href:"/tools/chatdetector",children:"ChatDetector"})," \u751f\u6210"]}),"\n",(0,l.jsx)(a.A,{ruleName:"\u89c4\u5219 1",ruleType:"Api Pair",ruleData:{Description:"Parameter 1 of zip_source_begin_write_cloning must be released by calling zip_source_free, with the same object passed as the 1-th argument to zip_source_free",Label:["api pair"],"Parameter-index":["0"],"cweType-and-QLCode":[{cweType:["CWE-404"],QLCode:'import cpp\nimport semmle.code.cpp.dataflow.new.DataFlow\n\n\nDataFlow::Node getSource(FunctionCall fc){\n  fc.getTarget().hasName("zip_source_begin_write_cloning")\n  and result.asExpr() = fc.getArgument(0)\n}\n\nDataFlow::Node getSink(FunctionCall fc){\n  fc.getTarget().hasName("zip_source_free")\n  and result.asExpr() = fc.getArgument(0)\n}\n\nFunctionCall freeTarget(FunctionCall malloc){\n  DataFlow::localFlow(getSource(malloc), getSink(result))\n}\n\nfrom FunctionCall fc\nwhere fc.getTarget().hasName("zip_source_begin_write_cloning")\n      and not exists(\n        FunctionCall free| \n        free = freeTarget(fc)\n      )\nselect fc.getLocation()'}]}}),"\n",(0,l.jsx)(i.h2,{id:"\u76f8\u5173api",children:"\u76f8\u5173API"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:(0,l.jsx)(i.a,{href:"/libraries/libzip/zip_file_set_comment",children:"zip_file_set_comment"})}),"\n",(0,l.jsx)(i.li,{children:(0,l.jsx)(i.a,{href:"/libraries/libzip/zip_discard",children:"zip_discard"})}),"\n",(0,l.jsx)(i.li,{children:(0,l.jsx)(i.a,{href:"/libraries/libzip/zip_fclose",children:"zip_fclose"})}),"\n",(0,l.jsx)(i.li,{children:(0,l.jsx)(i.a,{href:"/libraries/libzip/zip_fopen_encrypted",children:"zip_fopen_encrypted"})}),"\n",(0,l.jsx)(i.li,{children:(0,l.jsx)(i.a,{href:"/libraries/libzip/zip_open",children:"zip_open"})}),"\n"]})]})}function u(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,l.jsx)(i,{...e,children:(0,l.jsx)(_,{...e})}):_(e)}}}]);