"use strict";(self.webpackChunkvulrule=self.webpackChunkvulrule||[]).push([[68121],{28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var i=t(96540);const s={},r=i.createContext(s);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:n},e.children)}},85005:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"projects/openssl/api_asn1_utctime_cmp_time_t","title":"api_asn1_utctime_cmp_time_t","description":"API Overview","source":"@site/docs/projects/openssl/api_asn1_utctime_cmp_time_t.md","sourceDirName":"projects/openssl","slug":"/projects/openssl/api_asn1_utctime_cmp_time_t","permalink":"/vulrule/projects/openssl/api_asn1_utctime_cmp_time_t","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"api_asn1_type_cmp","permalink":"/vulrule/projects/openssl/api_asn1_type_cmp"},"next":{"title":"api_bio_accept_ex","permalink":"/vulrule/projects/openssl/api_bio_accept_ex"}}');var s=t(74848),r=t(28453);const o={},c=void 0,l={},a=[{value:"API Overview",id:"api-overview",level:2},{value:"Rule Description",id:"rule-description",level:2},{value:"Rule Code",id:"rule-code",level:2}];function p(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"api-overview",children:"API Overview"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"ASN1_UTCTIME_cmp_time_t"})," is an API in ",(0,s.jsx)(n.strong,{children:"openssl"}),". This rule belongs to the ",(0,s.jsx)(n.strong,{children:"return value check"})," type. This rule is generated using ",(0,s.jsx)(n.a,{href:"../../tools/AURC",children:"AURC"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"rule-description",children:"Rule Description"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"ASN1_TIME_cmp_time_t() and ASN1_UTCTIME_cmp_time_t() return -1 if I<s> is before I<t>, 0 if I<s> equals I<t>, or 1 if I<s> is after I<t>. -2 is returned on error."})}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Tags: ",(0,s.jsx)(n.strong,{children:"return value check"})]}),"\n",(0,s.jsx)(n.li,{children:"Parameter Index: ****"}),"\n",(0,s.jsxs)(n.li,{children:["CWE Type: ",(0,s.jsx)(n.strong,{children:"CWE-253"})]}),"\n"]})}),"\n",(0,s.jsx)(n.h2,{id:"rule-code",children:"Rule Code"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import cpp\n\nclass OpenSSLFunctionCall extends FunctionCall {\n  OpenSSLFunctionCall() {\n    this.getTarget().hasName("ASN1_UTCTIME_cmp_time_t")\n  }\n}\n\nfrom OpenSSLFunctionCall call, UnaryOperation uop\nwhere\n  uop.getOperator() = "!" and\n  uop.getOperand() = call.getAnAccess()\nselect uop, "This negation checks the return value of ASN1_UTCTIME_cmp_time_t."\n'})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}}}]);