"use strict";(self.webpackChunkvulrule=self.webpackChunkvulrule||[]).push([[92681],{28453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>l});var t=n(96540);const r={},i=t.createContext(r);function o(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(i.Provider,{value:s},e.children)}},86778:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"projects/openssl/api_ssl_get_extms_support","title":"api_ssl_get_extms_support","description":"API Overview","source":"@site/docs/projects/openssl/api_ssl_get_extms_support.md","sourceDirName":"projects/openssl","slug":"/projects/openssl/api_ssl_get_extms_support","permalink":"/vulrule/projects/openssl/api_ssl_get_extms_support","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"api_ssl_get_ex_data","permalink":"/vulrule/projects/openssl/api_ssl_get_ex_data"},"next":{"title":"api_ssl_get_shared_group","permalink":"/vulrule/projects/openssl/api_ssl_get_shared_group"}}');var r=n(74848),i=n(28453);const o={},l=void 0,p={},a=[{value:"API Overview",id:"api-overview",level:2},{value:"Rule Description",id:"rule-description",level:2},{value:"Rule Code",id:"rule-code",level:2}];function c(e){const s={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.h2,{id:"api-overview",children:"API Overview"}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"SSL_get_extms_support"})," is an API in ",(0,r.jsx)(s.strong,{children:"openssl"}),". This rule belongs to the ",(0,r.jsx)(s.strong,{children:"return value check"})," type. This rule is generated using ",(0,r.jsx)(s.a,{href:"../../tools/AURC",children:"AURC"}),"."]}),"\n",(0,r.jsx)(s.h2,{id:"rule-description",children:"Rule Description"}),"\n",(0,r.jsx)(s.admonition,{type:"tip",children:(0,r.jsx)(s.p,{children:"SSL_get_extms_support() returns 1 if the current session used extended master secret, 0 if it did not and -1 if a handshake is currently in progress i.e. it is not possible to determine if extended master secret was used."})}),"\n",(0,r.jsx)(s.admonition,{type:"info",children:(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Tags: ",(0,r.jsx)(s.strong,{children:"return value check"})]}),"\n",(0,r.jsx)(s.li,{children:"Parameter Index: ****"}),"\n",(0,r.jsxs)(s.li,{children:["CWE Type: ",(0,r.jsx)(s.strong,{children:"CWE-253"})]}),"\n"]})}),"\n",(0,r.jsx)(s.h2,{id:"rule-code",children:"Rule Code"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:'import cpp\n\nclass OpenSSLFunctionCall extends FunctionCall {\n  OpenSSLFunctionCall() {\n    this.getTarget().hasName("SSL_get_extms_support")\n  }\n}\n\nfrom OpenSSLFunctionCall call, UnaryOperation uop\nwhere\n  uop.getOperator() = "!" and\n  uop.getOperand() = call.getAnAccess()\nselect uop, "This negation checks the return value of SSL_get_extms_support."\n'})})]})}function u(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);