"use strict";(self.webpackChunkvulrule=self.webpackChunkvulrule||[]).push([[94414],{28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>a});var s=r(96540);const t={},i=s.createContext(t);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(i.Provider,{value:n},e.children)}},80863:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"projects/libdbus/api_dbus_message_new_error_printf","title":"api_dbus_message_new_error_printf","description":"API Overview","source":"@site/docs/projects/libdbus/api_dbus_message_new_error_printf.md","sourceDirName":"projects/libdbus","slug":"/projects/libdbus/api_dbus_message_new_error_printf","permalink":"/vulrule/projects/libdbus/api_dbus_message_new_error_printf","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"api_dbus_message_new_error","permalink":"/vulrule/projects/libdbus/api_dbus_message_new_error"},"next":{"title":"api_dbus_message_new_method_call","permalink":"/vulrule/projects/libdbus/api_dbus_message_new_method_call"}}');var t=r(74848),i=r(28453);const o={},a=void 0,l={},c=[{value:"API Overview",id:"api-overview",level:2},{value:"Rule Description",id:"rule-description",level:2},{value:"Rule Code",id:"rule-code",level:2}];function u(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"api-overview",children:"API Overview"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"dbus_message_new_error_printf"})," is an API in ",(0,t.jsx)(n.strong,{children:"libdbus"}),". This rule belongs to the ",(0,t.jsx)(n.strong,{children:"api pair"})," type. This rule is generated using ",(0,t.jsx)(n.a,{href:"../../tools/ChatDetector",children:"ChatDetector"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"rule-description",children:"Rule Description"}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"Parameter 3 of dbus_message_new_error_printf must be released by calling dbus_bus_request_name, with the same object passed as the 2-th argument to dbus_bus_request_name"})}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Tags: ",(0,t.jsx)(n.strong,{children:"api pair"})]}),"\n",(0,t.jsxs)(n.li,{children:["Parameter Index: ",(0,t.jsx)(n.strong,{children:"2"})]}),"\n",(0,t.jsxs)(n.li,{children:["CWE Type: ",(0,t.jsx)(n.strong,{children:"CWE-404"})]}),"\n"]})}),"\n",(0,t.jsx)(n.h2,{id:"rule-code",children:"Rule Code"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import cpp\nimport semmle.code.cpp.dataflow.new.DataFlow\n\n\nDataFlow::Node getSource(FunctionCall fc){\n  fc.getTarget().hasName("dbus_message_new_error_printf")\n  and result.asExpr() = fc.getArgument(2)\n}\n\nDataFlow::Node getSink(FunctionCall fc){\n  fc.getTarget().hasName("dbus_bus_request_name")\n  and result.asExpr() = fc.getArgument(1)\n}\n\nFunctionCall freeTarget(FunctionCall malloc){\n  DataFlow::localFlow(getSource(malloc), getSink(result))\n}\n\nfrom FunctionCall fc\nwhere fc.getTarget().hasName("dbus_message_new_error_printf")\n      and not exists(\n        FunctionCall free| \n        free = freeTarget(fc)\n      )\nselect fc.getLocation()\n'})})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}}}]);