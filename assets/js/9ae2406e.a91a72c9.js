"use strict";(self.webpackChunkvulrule=self.webpackChunkvulrule||[]).push([[50287],{28453:(e,t,l)=>{l.d(t,{R:()=>r,x:()=>s});var a=l(96540);const n={},o=a.createContext(n);function r(e){const t=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),a.createElement(o.Provider,{value:t},e.children)}},36201:(e,t,l)=>{l.r(t),l.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"projects/libdbus/api_dbus_data_slot_allocator_alloc","title":"api_dbus_data_slot_allocator_alloc","description":"API Overview","source":"@site/docs/projects/libdbus/api_dbus_data_slot_allocator_alloc.md","sourceDirName":"projects/libdbus","slug":"/projects/libdbus/api_dbus_data_slot_allocator_alloc","permalink":"/vulrule/projects/libdbus/api_dbus_data_slot_allocator_alloc","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"api_dbus_credentials_take_unix_gids","permalink":"/vulrule/projects/libdbus/api_dbus_credentials_take_unix_gids"},"next":{"title":"api_dbus_data_slot_allocator_free","permalink":"/vulrule/projects/libdbus/api_dbus_data_slot_allocator_free"}}');var n=l(74848),o=l(28453);const r={},s=void 0,i={},c=[{value:"API Overview",id:"api-overview",level:2},{value:"Rule Description",id:"rule-description",level:2},{value:"Rule Code",id:"rule-code",level:2}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"api-overview",children:"API Overview"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"_dbus_data_slot_allocator_alloc"})," is an API in ",(0,n.jsx)(t.strong,{children:"libdbus"}),". This rule belongs to the ",(0,n.jsx)(t.strong,{children:"api pair"})," type. This rule is generated using ",(0,n.jsx)(t.a,{href:"../../tools/ChatDetector",children:"ChatDetector"}),"."]}),"\n",(0,n.jsx)(t.h2,{id:"rule-description",children:"Rule Description"}),"\n",(0,n.jsx)(t.admonition,{type:"tip",children:(0,n.jsx)(t.p,{children:"Parameter 1 of _dbus_data_slot_allocator_alloc must be released by calling _dbus_data_slot_allocator_free, with the same object passed as the 1-th argument to _dbus_data_slot_allocator_free"})}),"\n",(0,n.jsx)(t.admonition,{type:"info",children:(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["Tags: ",(0,n.jsx)(t.strong,{children:"api pair"})]}),"\n",(0,n.jsxs)(t.li,{children:["Parameter Index: ",(0,n.jsx)(t.strong,{children:"0"})]}),"\n",(0,n.jsxs)(t.li,{children:["CWE Type: ",(0,n.jsx)(t.strong,{children:"CWE-404"})]}),"\n"]})}),"\n",(0,n.jsx)(t.h2,{id:"rule-code",children:"Rule Code"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:'import cpp\nimport semmle.code.cpp.dataflow.new.DataFlow\n\n\nDataFlow::Node getSource(FunctionCall fc){\n  fc.getTarget().hasName("_dbus_data_slot_allocator_alloc")\n  and result.asExpr() = fc.getArgument(0)\n}\n\nDataFlow::Node getSink(FunctionCall fc){\n  fc.getTarget().hasName("_dbus_data_slot_allocator_free")\n  and result.asExpr() = fc.getArgument(0)\n}\n\nFunctionCall freeTarget(FunctionCall malloc){\n  DataFlow::localFlow(getSource(malloc), getSink(result))\n}\n\nfrom FunctionCall fc\nwhere fc.getTarget().hasName("_dbus_data_slot_allocator_alloc")\n      and not exists(\n        FunctionCall free| \n        free = freeTarget(fc)\n      )\nselect fc.getLocation()\n'})})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}}}]);