"use strict";(self.webpackChunkvulrule=self.webpackChunkvulrule||[]).push([[30589],{28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var s=t(96540);const r={},i=s.createContext(r);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:n},e.children)}},75966:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"projects/openssl/api_pkcs12_safebag_get_nid","title":"api_pkcs12_safebag_get_nid","description":"API Overview","source":"@site/docs/projects/openssl/api_pkcs12_safebag_get_nid.md","sourceDirName":"projects/openssl","slug":"/projects/openssl/api_pkcs12_safebag_get_nid","permalink":"/vulrule/projects/openssl/api_pkcs12_safebag_get_nid","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"api_pkcs12_safebag_get_bag_nid","permalink":"/vulrule/projects/openssl/api_pkcs12_safebag_get_bag_nid"},"next":{"title":"api_pkcs7_type_is_other","permalink":"/vulrule/projects/openssl/api_pkcs7_type_is_other"}}');var r=t(74848),i=t(28453);const o={},l=void 0,a={},c=[{value:"API Overview",id:"api-overview",level:2},{value:"Rule Description",id:"rule-description",level:2},{value:"Rule Code",id:"rule-code",level:2}];function p(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"api-overview",children:"API Overview"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"PKCS12_SAFEBAG_get_nid"})," is an API in ",(0,r.jsx)(n.strong,{children:"openssl"}),". This rule belongs to the ",(0,r.jsx)(n.strong,{children:"return value check"})," type. This rule is generated using ",(0,r.jsx)(n.a,{href:"../../tools/AURC",children:"AURC"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"rule-description",children:"Rule Description"}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsx)(n.p,{children:"PKCS12_SAFEBAG_get_nid() and PKCS12_SAFEBAG_get_bag_nid() return the NID of the safeBag or bag object, or -1 if there is no corresponding NID. Other functions return a valid object of the specified type or NULL if an error occurred."})}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Tags: ",(0,r.jsx)(n.strong,{children:"return value check"})]}),"\n",(0,r.jsx)(n.li,{children:"Parameter Index: ****"}),"\n",(0,r.jsxs)(n.li,{children:["CWE Type: ",(0,r.jsx)(n.strong,{children:"CWE-253"})]}),"\n"]})}),"\n",(0,r.jsx)(n.h2,{id:"rule-code",children:"Rule Code"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'import cpp\n\nclass OpenSSLFunctionCall extends FunctionCall {\n  OpenSSLFunctionCall() {\n    this.getTarget().hasName("PKCS12_SAFEBAG_get_nid")\n  }\n}\n\nfrom OpenSSLFunctionCall call, UnaryOperation uop\nwhere\n  uop.getOperator() = "!" and\n  uop.getOperand() = call.getAnAccess()\nselect uop, "This negation checks the return value of PKCS12_SAFEBAG_get_nid."\n'})})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}}}]);