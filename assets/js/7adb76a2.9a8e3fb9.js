"use strict";(self.webpackChunkvulrule=self.webpackChunkvulrule||[]).push([[14871],{28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>l});var r=t(96540);const i={},o=r.createContext(i);function c(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),r.createElement(o.Provider,{value:n},e.children)}},72659:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>c,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"projects/libevent/api_evhttp_connection_base_bufferevent_new","title":"api_evhttp_connection_base_bufferevent_new","description":"API Overview","source":"@site/docs/projects/libevent/api_evhttp_connection_base_bufferevent_new.md","sourceDirName":"projects/libevent","slug":"/projects/libevent/api_evhttp_connection_base_bufferevent_new","permalink":"/vulrule/projects/libevent/api_evhttp_connection_base_bufferevent_new","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"api_evhttp_bind_socket_with_handle","permalink":"/vulrule/projects/libevent/api_evhttp_bind_socket_with_handle"},"next":{"title":"api_evhttp_connection_base_bufferevent_unix_new","permalink":"/vulrule/projects/libevent/api_evhttp_connection_base_bufferevent_unix_new"}}');var i=t(74848),o=t(28453);const c={},l=void 0,s={},a=[{value:"API Overview",id:"api-overview",level:2},{value:"Rule Description",id:"rule-description",level:2},{value:"Rule Code",id:"rule-code",level:2}];function u(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"api-overview",children:"API Overview"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"evhttp_connection_base_bufferevent_new"})," is an API in ",(0,i.jsx)(n.strong,{children:"libevent"}),". This rule belongs to the ",(0,i.jsx)(n.strong,{children:"api pair"})," type. This rule is generated using ",(0,i.jsx)(n.a,{href:"../../tools/ChatDetector",children:"ChatDetector"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"rule-description",children:"Rule Description"}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"The return value of evhttp_connection_base_bufferevent_new must be released by calling evhttp_connection_free, with the same object passed as the 1-th argument to evhttp_connection_free"})}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Tags: ",(0,i.jsx)(n.strong,{children:"api pair"})]}),"\n",(0,i.jsxs)(n.li,{children:["Parameter Index: ",(0,i.jsx)(n.strong,{children:"-1"})]}),"\n",(0,i.jsxs)(n.li,{children:["CWE Type: ",(0,i.jsx)(n.strong,{children:"CWE-404"})]}),"\n"]})}),"\n",(0,i.jsx)(n.h2,{id:"rule-code",children:"Rule Code"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import cpp\nimport semmle.code.cpp.dataflow.new.DataFlow\n\n\nDataFlow::Node getSource(FunctionCall fc){\n  fc.getTarget().hasName("evhttp_connection_base_bufferevent_new")\n  and result.asExpr() = fc\n}\n\nDataFlow::Node getSink(FunctionCall fc){\n  fc.getTarget().hasName("evhttp_connection_free")\n  and result.asExpr() = fc.getArgument(0)\n}\n\nFunctionCall freeTarget(FunctionCall malloc){\n  DataFlow::localFlow(getSource(malloc), getSink(result))\n}\n\nfrom FunctionCall fc\nwhere fc.getTarget().hasName("evhttp_connection_base_bufferevent_new")\n      and not exists(\n        FunctionCall free| \n        free = freeTarget(fc)\n      )\nselect fc.getLocation()\n\n'})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}}}]);