"use strict";(self.webpackChunkvulrule=self.webpackChunkvulrule||[]).push([[34877],{28453:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>t});var s=n(96540);const l={},c=s.createContext(l);function o(e){const r=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function t(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),s.createElement(c.Provider,{value:r},e.children)}},33499:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>t,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>i});const s=JSON.parse('{"id":"projects/linux kernel/api_alloc_dma_rx_desc_resources","title":"api_alloc_dma_rx_desc_resources","description":"API Overview","source":"@site/docs/projects/linux kernel/api_alloc_dma_rx_desc_resources.md","sourceDirName":"projects/linux kernel","slug":"/projects/linux kernel/api_alloc_dma_rx_desc_resources","permalink":"/vulrule/projects/linux kernel/api_alloc_dma_rx_desc_resources","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"api_alloc_dma_desc_resources","permalink":"/vulrule/projects/linux kernel/api_alloc_dma_desc_resources"},"next":{"title":"api_alloc_dma_tx_desc_resources","permalink":"/vulrule/projects/linux kernel/api_alloc_dma_tx_desc_resources"}}');var l=n(74848),c=n(28453);const o={},t=void 0,a={},i=[{value:"API Overview",id:"api-overview",level:2},{value:"Rule Description",id:"rule-description",level:2},{value:"Rule Code",id:"rule-code",level:2}];function d(e){const r={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(r.h2,{id:"api-overview",children:"API Overview"}),"\n",(0,l.jsxs)(r.p,{children:[(0,l.jsx)(r.strong,{children:"__alloc_dma_rx_desc_resources"})," is an API in ",(0,l.jsx)(r.strong,{children:"Linux kernel"}),". This rule belongs to the ",(0,l.jsx)(r.strong,{children:"api pair"})," type. This rule is generated using ",(0,l.jsx)(r.a,{href:"../../tools/APISpecGen",children:"APISpecGen"}),"."]}),"\n",(0,l.jsx)(r.h2,{id:"rule-description",children:"Rule Description"}),"\n",(0,l.jsx)(r.admonition,{type:"tip",children:(0,l.jsx)(r.p,{children:"The resource acquired by __alloc_dma_rx_desc_resources must be properly released using __free_dma_rx_desc_resources"})}),"\n",(0,l.jsx)(r.admonition,{type:"info",children:(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsxs)(r.li,{children:["Tags: ",(0,l.jsx)(r.strong,{children:"api pair"})]}),"\n",(0,l.jsxs)(r.li,{children:["Parameter Index: ",(0,l.jsx)(r.strong,{children:"N/A"})]}),"\n",(0,l.jsxs)(r.li,{children:["CWE Type: ",(0,l.jsx)(r.strong,{children:"CWE-404"})]}),"\n"]})}),"\n",(0,l.jsx)(r.h2,{id:"rule-code",children:"Rule Code"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-python",children:'import cpp\nimport semmle.code.cpp.dataflow.new.DataFlow\n\n\nDataFlow::Node getSource(FunctionCall fc){\n  fc.getTarget().hasName("__alloc_dma_rx_desc_resources")\n  and result.asExpr() = fc.getArgument(0)\n}\n\nDataFlow::Node getSink(FunctionCall fc){\n  fc.getTarget().hasName("__free_dma_rx_desc_resources")\n  and result.asExpr() = fc.getArgument(0)\n}\n\nFunctionCall freeTarget(FunctionCall malloc){\n  DataFlow::localFlow(getSource(malloc), getSink(result))\n}\n\nfrom FunctionCall fc\nwhere fc.getTarget().hasName("__alloc_dma_rx_desc_resources")\n      and not exists(\n        FunctionCall free| \n        free = freeTarget(fc)\n      )\nselect fc.getLocation()\n\n    \n'})})]})}function u(e={}){const{wrapper:r}={...(0,c.R)(),...e.components};return r?(0,l.jsx)(r,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}}}]);