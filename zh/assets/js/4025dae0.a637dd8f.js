"use strict";(self.webpackChunkvulrule=self.webpackChunkvulrule||[]).push([[84442],{28453:(e,r,t)=>{t.d(r,{R:()=>i,x:()=>o});var n=t(96540);const s={},c=n.createContext(s);function i(e){const r=n.useContext(c);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(c.Provider,{value:r},e.children)}},82862:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"projects/openssl/api_ossl_cmp_try_certreq","title":"OSSL_CMP_try_certreq","description":"API \u6982\u8ff0","source":"@site/i18n/zh/docusaurus-plugin-content-docs/current/projects/openssl/api_ossl_cmp_try_certreq.md","sourceDirName":"projects/openssl","slug":"/projects/openssl/api_ossl_cmp_try_certreq","permalink":"/vulrule/zh/projects/openssl/api_ossl_cmp_try_certreq","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"OSSL_CMP_MSG_write","permalink":"/vulrule/zh/projects/openssl/api_ossl_cmp_msg_write"},"next":{"title":"OSSL_CRMF_MSG_get_certReqId","permalink":"/vulrule/zh/projects/openssl/api_ossl_crmf_msg_get_certreqid"}}');var s=t(74848),c=t(28453);const i={},o="OSSL_CMP_try_certreq",l={},a=[{value:"API \u6982\u8ff0",id:"api-\u6982\u8ff0",level:2},{value:"\u89c4\u5219\u63cf\u8ff0",id:"\u89c4\u5219\u63cf\u8ff0",level:2},{value:"\u89c4\u5219\u4ee3\u7801",id:"\u89c4\u5219\u4ee3\u7801",level:2}];function p(e){const r={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"ossl_cmp_try_certreq",children:"OSSL_CMP_try_certreq"})}),"\n",(0,s.jsx)(r.h2,{id:"api-\u6982\u8ff0",children:"API \u6982\u8ff0"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.strong,{children:"OSSL_CMP_try_certreq"})," \u662f ",(0,s.jsx)(r.strong,{children:"openssl"})," \u4e2d\u7684\u4e00\u4e2aAPI\u3002\u8be5\u89c4\u5c5e\u4e8e",(0,s.jsx)(r.strong,{children:"return value check"})," \u7c7b\u578b\u3002\u8be5\u89c4\u5219\u662f\u4f7f\u7528 ",(0,s.jsx)(r.a,{href:"../../tools/AURC",children:(0,s.jsx)(r.strong,{children:"AURC"})})," \u751f\u6210\u7684\u3002"]}),"\n",(0,s.jsx)(r.h2,{id:"\u89c4\u5219\u63cf\u8ff0",children:"\u89c4\u5219\u63cf\u8ff0"}),"\n",(0,s.jsx)(r.admonition,{type:"tip",children:(0,s.jsx)(r.p,{children:"OSSL_CMP_try_certreq() returns 1 if the requested certificate is available via L<OSSL_CMP_CTX_get0_newCert(3)> or on successfully aborting a pending certificate request, 0 on error, and -1 in case a 'waiting' status has been received and checkAfter value is available. In the latter case L<OSSL_CMP_CTX_get0_newCert(3)> yields NULL and the output parameter I<checkAfter> has been used to assign the received value unless I<checkAfter> is NULL."})}),"\n",(0,s.jsxs)(r.admonition,{type:"info",children:[(0,s.jsxs)(r.p,{children:["\u6807\u7b7e\uff1a",(0,s.jsx)(r.strong,{children:"return value check"})]}),(0,s.jsx)(r.p,{children:"\u53c2\u6570\u4e0b\u6807\uff1a****"}),(0,s.jsxs)(r.p,{children:["CWE\u7c7b\u522b\uff1a",(0,s.jsx)(r.strong,{children:"CWE-253"})]})]}),"\n",(0,s.jsx)(r.h2,{id:"\u89c4\u5219\u4ee3\u7801",children:"\u89c4\u5219\u4ee3\u7801"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-python",children:'import cpp\n\nclass OpenSSLFunctionCall extends FunctionCall {\n  OpenSSLFunctionCall() {\n    this.getTarget().hasName("OSSL_CMP_try_certreq")\n  }\n}\n\nfrom OpenSSLFunctionCall call, UnaryOperation uop\nwhere\n  uop.getOperator() = "!" and\n  uop.getOperand() = call.getAnAccess()\nselect uop, "This negation checks the return value of OSSL_CMP_try_certreq."\n'})})]})}function u(e={}){const{wrapper:r}={...(0,c.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}}}]);