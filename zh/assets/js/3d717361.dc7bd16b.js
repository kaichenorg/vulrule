"use strict";(self.webpackChunkvulrule=self.webpackChunkvulrule||[]).push([[61335],{28453:(e,l,n)=>{n.d(l,{R:()=>a,x:()=>o});var c=n(96540);const t={},r=c.createContext(t);function a(e){const l=c.useContext(r);return c.useMemo((function(){return"function"==typeof e?e(l):{...l,...e}}),[l,e])}function o(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),c.createElement(r.Provider,{value:l},e.children)}},42772:(e,l,n)=>{n.r(l),n.d(l,{assets:()=>i,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>s});const c=JSON.parse('{"id":"projects/linux kernel/api_alloc_cld_upcall","title":"alloc_cld_upcall","description":"API \u6982\u8ff0","source":"@site/i18n/zh/docusaurus-plugin-content-docs/current/projects/linux kernel/api_alloc_cld_upcall.md","sourceDirName":"projects/linux kernel","slug":"/projects/linux kernel/api_alloc_cld_upcall","permalink":"/vulrule/zh/projects/linux kernel/api_alloc_cld_upcall","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"alloc_cipher_test_sglists","permalink":"/vulrule/zh/projects/linux kernel/api_alloc_cipher_test_sglists"},"next":{"title":"alloc_client","permalink":"/vulrule/zh/projects/linux kernel/api_alloc_client"}}');var t=n(74848),r=n(28453);const a={},o="alloc_cld_upcall",i={},s=[{value:"API \u6982\u8ff0",id:"api-\u6982\u8ff0",level:2},{value:"\u89c4\u5219\u63cf\u8ff0",id:"\u89c4\u5219\u63cf\u8ff0",level:2},{value:"\u89c4\u5219\u4ee3\u7801",id:"\u89c4\u5219\u4ee3\u7801",level:2}];function u(e){const l={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(l.header,{children:(0,t.jsx)(l.h1,{id:"alloc_cld_upcall",children:"alloc_cld_upcall"})}),"\n",(0,t.jsx)(l.h2,{id:"api-\u6982\u8ff0",children:"API \u6982\u8ff0"}),"\n",(0,t.jsxs)(l.p,{children:[(0,t.jsx)(l.strong,{children:"alloc_cld_upcall"})," \u662f ",(0,t.jsx)(l.strong,{children:"Linux kernel"})," \u4e2d\u7684\u4e00\u4e2aAPI\u3002\u8be5\u89c4\u5c5e\u4e8e",(0,t.jsx)(l.strong,{children:"api pair"})," \u7c7b\u578b\u3002\u8be5\u89c4\u5219\u662f\u4f7f\u7528 ",(0,t.jsx)(l.a,{href:"../../tools/APISpecGen",children:(0,t.jsx)(l.strong,{children:"APISpecGen"})})," \u751f\u6210\u7684\u3002"]}),"\n",(0,t.jsx)(l.h2,{id:"\u89c4\u5219\u63cf\u8ff0",children:"\u89c4\u5219\u63cf\u8ff0"}),"\n",(0,t.jsx)(l.admonition,{type:"tip",children:(0,t.jsx)(l.p,{children:"The resource acquired by alloc_cld_upcall must be properly released using free_cld_upcall"})}),"\n",(0,t.jsxs)(l.admonition,{type:"info",children:[(0,t.jsxs)(l.p,{children:["\u6807\u7b7e\uff1a",(0,t.jsx)(l.strong,{children:"api pair"})]}),(0,t.jsx)(l.p,{children:"\u53c2\u6570\u4e0b\u6807\uff1a****"}),(0,t.jsxs)(l.p,{children:["CWE\u7c7b\u522b\uff1a",(0,t.jsx)(l.strong,{children:"CWE-404"})]})]}),"\n",(0,t.jsx)(l.h2,{id:"\u89c4\u5219\u4ee3\u7801",children:"\u89c4\u5219\u4ee3\u7801"}),"\n",(0,t.jsx)(l.pre,{children:(0,t.jsx)(l.code,{className:"language-python",children:'\n    import cpp\nimport semmle.code.cpp.dataflow.new.DataFlow\n\n\nDataFlow::Node getSource(FunctionCall fc){\n  fc.getTarget().hasName("alloc_cld_upcall")\n  and result.asExpr() = fc\n}\n\nDataFlow::Node getSink(FunctionCall fc){\n  fc.getTarget().hasName("free_cld_upcall")\n  and result.asExpr() = fc.getArgument(0)\n}\n\nFunctionCall freeTarget(FunctionCall malloc){\n  DataFlow::localFlow(getSource(malloc), getSink(result))\n}\n\nfrom FunctionCall fc\nwhere fc.getTarget().hasName("alloc_cld_upcall")\n      and not exists(\n        FunctionCall free| \n        free = freeTarget(fc)\n      )\nselect fc.getLocation()\n\n    \n'})})]})}function p(e={}){const{wrapper:l}={...(0,r.R)(),...e.components};return l?(0,t.jsx)(l,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}}}]);