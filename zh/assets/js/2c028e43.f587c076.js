"use strict";(self.webpackChunkvulrule=self.webpackChunkvulrule||[]).push([[92430],{28453:(n,e,t)=>{t.d(e,{R:()=>c,x:()=>i});var o=t(96540);const s={},r=o.createContext(s);function c(n){const e=o.useContext(r);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:c(n.components),o.createElement(r.Provider,{value:e},n.children)}},92927:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>a,contentTitle:()=>i,default:()=>d,frontMatter:()=>c,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"projects/libdbus/api_dbus_connection_open","title":"dbus_connection_open","description":"API \u6982\u8ff0","source":"@site/i18n/zh/docusaurus-plugin-content-docs/current/projects/libdbus/api_dbus_connection_open.md","sourceDirName":"projects/libdbus","slug":"/projects/libdbus/api_dbus_connection_open","permalink":"/vulrule/zh/projects/libdbus/api_dbus_connection_open","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"_dbus_connection_new_for_transport","permalink":"/vulrule/zh/projects/libdbus/api_dbus_connection_new_for_transport"},"next":{"title":"_dbus_connection_unlock","permalink":"/vulrule/zh/projects/libdbus/api_dbus_connection_unlock"}}');var s=t(74848),r=t(28453);const c={},i="dbus_connection_open",a={},l=[{value:"API \u6982\u8ff0",id:"api-\u6982\u8ff0",level:2},{value:"\u89c4\u5219\u63cf\u8ff0",id:"\u89c4\u5219\u63cf\u8ff0",level:2},{value:"\u89c4\u5219\u4ee3\u7801",id:"\u89c4\u5219\u4ee3\u7801",level:2}];function u(n){const e={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"dbus_connection_open",children:"dbus_connection_open"})}),"\n",(0,s.jsx)(e.h2,{id:"api-\u6982\u8ff0",children:"API \u6982\u8ff0"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"dbus_connection_open"})," \u662f ",(0,s.jsx)(e.strong,{children:"libdbus"})," \u4e2d\u7684\u4e00\u4e2aAPI\u3002\u8be5\u89c4\u5c5e\u4e8e",(0,s.jsx)(e.strong,{children:"api pair"})," \u7c7b\u578b\u3002\u8be5\u89c4\u5219\u662f\u4f7f\u7528 ",(0,s.jsx)(e.a,{href:"../../tools/ChatDetector",children:(0,s.jsx)(e.strong,{children:"ChatDetector"})})," \u751f\u6210\u7684\u3002"]}),"\n",(0,s.jsx)(e.h2,{id:"\u89c4\u5219\u63cf\u8ff0",children:"\u89c4\u5219\u63cf\u8ff0"}),"\n",(0,s.jsx)(e.admonition,{type:"tip",children:(0,s.jsx)(e.p,{children:"Parameter 1 of dbus_connection_open must be released by calling dbus_bus_request_name, with the same object passed as the 2-th argument to dbus_bus_request_name"})}),"\n",(0,s.jsxs)(e.admonition,{type:"info",children:[(0,s.jsxs)(e.p,{children:["\u6807\u7b7e\uff1a",(0,s.jsx)(e.strong,{children:"api pair"})]}),(0,s.jsxs)(e.p,{children:["\u53c2\u6570\u4e0b\u6807\uff1a",(0,s.jsx)(e.strong,{children:"0"})]}),(0,s.jsxs)(e.p,{children:["CWE\u7c7b\u522b\uff1a",(0,s.jsx)(e.strong,{children:"CWE-404"})]})]}),"\n",(0,s.jsx)(e.h2,{id:"\u89c4\u5219\u4ee3\u7801",children:"\u89c4\u5219\u4ee3\u7801"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'import cpp\nimport semmle.code.cpp.dataflow.new.DataFlow\n\n\nDataFlow::Node getSource(FunctionCall fc){\n  fc.getTarget().hasName("dbus_connection_open")\n  and result.asExpr() = fc.getArgument(0)\n}\n\nDataFlow::Node getSink(FunctionCall fc){\n  fc.getTarget().hasName("dbus_bus_request_name")\n  and result.asExpr() = fc.getArgument(1)\n}\n\nFunctionCall freeTarget(FunctionCall malloc){\n  DataFlow::localFlow(getSource(malloc), getSink(result))\n}\n\nfrom FunctionCall fc\nwhere fc.getTarget().hasName("dbus_connection_open")\n      and not exists(\n        FunctionCall free| \n        free = freeTarget(fc)\n      )\nselect fc.getLocation()\n'})})]})}function d(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(u,{...n})}):u(n)}}}]);